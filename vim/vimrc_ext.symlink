filetype plugin indent on

inoremap jj <Esc>

noremap j gj
noremap k gk
let mapleader=" "
set backspace=indent,eol,start

" indents
set shiftwidth=4
set tabstop=4
set noexpandtab

set hlsearch " makes highlight show up on search
set list
set listchars=tab:·\ ,trail:«"makes tabs show as "·    "

syntax on
set number
" line numbers are relative to current line, not absolute
" http://vim.wikia.com/wiki/Display_line_numbers
set relativenumber

set laststatus=2

map - 10<C-w>-
map _ 10<C-w>+
map = 10<C-w><
map + 10<C-w>>

set nocompatible " be iMproved, required
filetype off " required

set autoread
set foldmethod=indent
set nofoldenable
au BufRead *.txt setlocal spell

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'NLKNguyen/papercolor-theme'

"fuzzy file searcher
Plugin 'kien/ctrlp.vim'
if executable('ag')
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif
let g:ctrlp_max_depth=10
let g:ctrlp_max_files=300

"file explorer
Plugin 'scrooloose/nerdtree'

"search
Plugin 'rking/ag.vim'
" don't take over buffer with first result
ca Ag Ag!

"Plugin 'MattesGroeger/vim-bookmarks'

Plugin 'airblade/vim-gitgutter'
"avoid gutter popping in and out
let g:gitgutter_sign_column_always = 1

" Git commands (G<something>)
Plugin 'tpope/vim-fugitive'

" rainbow parens
Plugin 'luochen1990/rainbow'
let g:rainbow_active = 0 "enable it later via :RainbowToggle
"color needs work here
let g:rainbow_conf = {
\	'guifgs': ['RoyalBlue3', 'SeaGreen3', 'DarkOrchid3', 'firebrick3', 'RoyalBlue3',
\ 'SeaGreen3', 'DarkOrchid3', 'firebrick3', 'RoyalBlue3', 'SeaGreen3',
\ 'DarkOrchid3', 'firebrick3', 'RoyalBlue3', 'SeaGreen3', 'DarkOrchid3',
\ 'firebrick3'],
\	'ctermfgs': ['lightyellow'],
\	'operators': 0,
\	'parentheses': ['start=/(/ end=/)/ fold', 'start=/\[/ end=/\]/ fold', 'start=/{/ end=/}/ fold']
\}

Plugin 'ap/vim-css-color'

Plugin 'easymotion/vim-easymotion'
map <leader> <Plug>(easymotion-prefix)
map f <Plug>(easymotion-fl)
map F <Plug>(easymotion-Fl)
map t <Plug>(easymotion-tl)
map T <Plug>(easymotion-Tl)
map W <leader>w
map B <leader>b
map E <leader>e

Plugin 'terryma/vim-multiple-cursors'
" binds to <C-n>, use v after selection

" this works well but auto line wraps
"Plugin 'jiangmiao/auto-pairs'
" unmatched close jumps to next close, <c-v>} will avoid
let g:AutoPairsFlyMode = 0 " this works when you don't want it to
" let g:AutoPairsShortcutBackInsert = '<M-b>' "this doesn't work in macVim,
" need to remap
" Default: {'(':')', '[':']', '{':'}',"'":"'",'"':'"', '`':'`'}
let g:AutoPairs ={
\ '(':')',
\ '[':']',
\ '{':'}',
\ "'":"'",
\ '"':'"',
\}
let g:AutoPairsCenterLine = 0

"cs<before><after>: change
"ys<where><after>: add
"ds<what>: delete
":help surround
Plugin 'tpope/vim-surround'

"project specific settings
" these are in separate _vimrc_local.vim files
Plugin 'LucHermitte/lh-vim-lib'
Plugin 'LucHermitte/local_vimrc'

Bundle 'ervandew/supertab'

" this is not playing nice with YMC
Plugin 'SirVer/ultisnips'
"Plugin 'honza/vim-snippets' " bring these in one at a time
"Plugin 'matthewsimo/angular-vim-snippets'
let g:UltiSnipsEditSplit="vertical"
let g:UltiSnipsExpandTrigger = "<tab>"
let g:UltiSnipsJumpForwardTrigger = "<tab>"
let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

" autocomplete
Plugin 'Valloric/YouCompleteMe'
" make YCM compatible with UltiSnips (using supertab)
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:SuperTabDefaultCompletionType = '<C-n>'

" figure out indent settings
Plugin 'tpope/vim-sleuth'

Plugin 'Shutnik/jshint2.vim'
let jshint2_save = 1
let jshint2_command = '/usr/local/bin/jshint'

" Js formatting
Plugin 'maksimr/vim-jsbeautify'
Plugin 'einars/js-beautify'
autocmd FileType javascript vnoremap <buffer>  <c-f> :call RangeJsBeautify()<cr>
autocmd FileType json vnoremap <buffer>  <c-f> :call RangeJsBeautify()<cr>
autocmd FileType html vnoremap <buffer>  <c-f> :call RangeHtmlBeautify()<cr>
" below is not being set/overridden
" autocmd FileType javascript noremap <buffer>  <c-f> :call JsBeautify()<cr>

call vundle#end()            " required vundle
filetype plugin indent on    " required vundle

set background=dark
colorscheme PaperColor
hi LineNr term=bold cterm=NONE ctermfg=DarkGrey ctermbg=NONE gui=NONE guifg=DarkGrey guibg=NONE " http://vim.wikia.com/wiki/Display_line_numbers
hi Folded guibg=grey10 guifg=grey50
hi SpecialKey ctermfg=darkgray guifg=gray35


" Macros
" define these commands on a repo basis
let @b=":Build"
let @t=":Test"

let @r=":! %"
